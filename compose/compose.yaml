## The base containers that always run, either in production or in development.
## Containers that are only required or desired during development are located in the "compose.dev.yaml" file

services:
  sub-domain-proxy:
    container_name: sub-domain-proxy
    image: traefik:v3.1
    ports:
      - "80:80"
      - "443:443"
      - "8888:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/:/etc/traefik/
      - ./traefik/acme.json:/acme.json

  sub-domain-app:
    container_name: sub-domain-app
    image: tygrdev/magento-nginx:1.24-0
    volumes: &appvolumes
      - ~/.composer:/var/www/.composer:cached
      - ~/.ssh/id_rsa:/var/www/.ssh/id_rsa:cached
      - ~/.ssh/known_hosts:/var/www/.ssh/known_hosts:cached
      - appdata:/var/www/html
      - sockdata:/sock
    labels:
      - traefik.enable=true
      - traefik.http.routers.app.entrypoints=web,websecure
      - traefik.http.routers.app.rule=Host(`ecommerce.demystifydigital.co.uk`)
      - traefik.http.services.app.loadbalancer.server.port=8000
      - traefik.http.routers.app.tls.certresolver=letsencrypt
    environment:
      - PROJECT_NAME=sub-domain

  sub-domain-phpfpm:
    container_name: sub-domain-phpfpm
    image: markoshust/magento-php:8.1-fpm-5
    volumes: *appvolumes
    env_file: env/phpfpm.env

  sub-domain-db:
    container_name: sub-domain-db
    image: mariadb:10.6
    command:
      --max_allowed_packet=64M
      --optimizer_use_condition_selectivity=1
      --optimizer_switch="rowid_filter=off"
    # ports:
    #   - "3306:3306"
    env_file: env/db.env
    volumes:
      - dbdata:/var/lib/mysql

  ## If you wish to use MySQL, comment out the mariadb db image above and
  ## uncomment this block.
  #db:
  #  image: mysql:8.0
  #  command:
  #    --max_allowed_packet=64M
  #    --optimizer_use_condition_selectivity=1
  #    --optimizer_switch="rowid_filter=off"
  #  ports:
  #    - "3306:3306"
  #  env_file: env/db.env
  #  volumes:
  #    - dbdata:/var/lib/mysql

  sub-domain-redis:
    container_name: sub-domain-redis
    image: redis:7.2-alpine
    # ports:
    #   - "6379:6379"

  sub-domain-opensearch:
    container_name: sub-domain-opensearch
    image: markoshust/magento-opensearch:2.12-0
    # ports:
    #   - "9200:9200"
    #   - "9300:9300"
    env_file: env/opensearch.env
    environment:
      - "discovery.type=single-node"
      ## Avoid test failures due to small disks
      ## More info at https://github.com/markshust/docker-magento/issues/488
      # - "cluster.routing.allocation.disk.threshold_enabled=false"
      # - "index.blocks.read_only_allow_delete"
      ## Uncomment to set custom heap size to avoid memory errors
      #- "OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g"
      ## Uncomment to increase the virtual memory map count
      #- "max_map_count=262144"

  ## If you wish to use Elasticsearch, comment out opensearch image above and
  ## uncomment this block. Do the same in the composer.healthcheck.yaml file.
  # Additionally, if you are performing the manual setup, you will need to
  # update the bin/setup command to use the $ES_HOST variable as the value for
  # the --elasticsearch-host argument passed to bin/magento setup:install.
  # elasticsearch:
  #  image: markoshust/magento-elasticsearch:8.4-0
  #  ports:
  #    - "9200:9200"
  #    - "9300:9300"
  #  env_file: env/elasticsearch.env
  #  environment:
  #    - "discovery.type=single-node"
  #    ## Avoid test failures due to small disks
  #    ## More info at https://github.com/markshust/docker-magento/issues/488
  #    - "cluster.routing.allocation.disk.threshold_enabled=false"
  #    - "index.blocks.read_only_allow_delete"
  #    ## Uncomment to set custom heap size to avoid memory errors
  #    #- "ES_JAVA_OPTS=-Xms1g -Xmx1g"
  #    ## Uncomment to increase the virtual memory map count
  #    #- "max_map_count=262144"

  sub-domain-rabbitmq:
    container_name: sub-domain-rabbitmq
    image: markoshust/magento-rabbitmq:3.12-0
    # ports:
    #   - "15672:15672"
    #   - "5672:5672"
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq
    env_file: env/rabbitmq.env

  ## Cloudflare tunnel support, uncomment to enable
  #tunnel:
  #  container_name: cloudflared-tunnel
  #  image: cloudflare/cloudflared:latest
  #  command: tunnel run
  #  env_file: env/cloudflare.env

  ## Blackfire support, uncomment to enable
  #blackfire:
  #  image: blackfire/blackfire:2
  #  ports:
  #    - "8307"
  #  env_file: env/blackfire.env

  ## Selenium support, uncomment to enable
  #selenium:
  #  image: selenium/standalone-chrome-debug:3.8.1
  #  ports:
  #    - "5900:5900"
  #  extra_hosts: *appextrahosts

volumes:
  appdata:
  dbdata:
  rabbitmqdata:
  sockdata:
  ssldata:
